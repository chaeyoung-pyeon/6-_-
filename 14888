N = int(input())
A = list(map(int, input().split()))
operators = list(map(int, input().split()))  # + - * /

min_result = 1e9
max_result = -1e9

def dfs(index, current_result, plus, minus, multiply, divide):
    global min_result, max_result
    if index == N:
        min_result = min(min_result, current_result)
        max_result = max(max_result, current_result)
        return

    if plus:
        dfs(index + 1, current_result + A[index], plus - 1, minus, multiply, divide)
    if minus:
        dfs(index + 1, current_result - A[index], plus, minus - 1, multiply, divide)
    if multiply:
        dfs(index + 1, current_result * A[index], plus, minus, multiply - 1, divide)
    if divide:
        # C++14 방식의 나눗셈 처리
        if current_result < 0:
            dfs(index + 1, -(-current_result // A[index]), plus, minus, multiply, divide - 1)
        else:
            dfs(index + 1, current_result // A[index], plus, minus, multiply, divide - 1)

dfs(1, A[0], *operators)
print(max_result)
print(min_result)
